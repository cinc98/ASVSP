version: '3' 

services:

  namenode1:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    container_name: namenode1
    volumes:
      - hadoop_namenode1:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
      - 9000:9000
  
  datanode11:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: datanode11
    depends_on: 
      - namenode1
    volumes:
      - hadoop_datanode11:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  spark-master1:
    image: bde2020/spark-master:2.4.0-hadoop3.1
    container_name: spark-master1
    ports:
      - 8080:8080
      - 7077:7077
    environment: 
      - PYSPARK_PYTHON=python3
      - PYTHONIOENCODING=utf8
    env_file:
      - ./hadoop.env
    volumes:
      - ./consumer :/spark/primeri/

  spark-worker11:
    image: bde2020/spark-worker:2.4.0-hadoop3.1
    container_name: spark-worker11
    depends_on:
      - spark-master1
    environment:
      - SPARK_MASTER=spark://spark-master1:7077
    ports:
      - 8081:8081
    env_file:
      - ./hadoop.env

  zoo1:
    image: zookeeper:3.4.9
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zoo1:/data
      - zoo1log:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo1

  producer1:
    build: ./producer
    container_name: kafka_producer_1
    environment: 
      KAFKA_BROKER: "kafka1:19092"
    depends_on: 
      - kafka1

  producer2:
    build: ./producer1
    container_name: kafka_producer_2
    environment: 
      KAFKA_BROKER: "kafka1:19092"
    depends_on: 
      - kafka1

volumes:
  hadoop_namenode1:
  hadoop_datanode11:
  zoo1:
  zoo1log:
  kafka1:
